#!/usr/bin/env bash
#
# backup
#
# Performs a full system backup to an external volume using `rsync`. It
# archives the root directory (`/`) while excluding numerous system, cache,
# and temporary directories. Logs output and timing, and uses `caffeinate`
# to prevent sleep during the backup.

set -euo pipefail

backup_dir="/Volumes/gil-ext2-1tb/Backup_$(hostname -s)"

#mkdir -p $backup_dir
#if [ ! -w "$backup_dir" ]; then
#   echo "Directory not writable: $backup_dir" >&2
#   exit 1
#fi

START=$(date "+%s")
caffeinate sudo rsync --archive --verbose --human-readable --itemize-changes --progress \
  --compress --delete --delete-excluded --exclude='/Benutzerinformationen' \
  --exclude='/Network' --exclude='/System' --exclude='/Volumes' \
  --exclude='/bin' --exclude='/cores' --exclude='/dev' --exclude='/mach_kernel' \
  --exclude='/net' --exclude='/private' --exclude='/sbin' --exclude='/tmp' \
  --exclude='/usr' --exclude='/var' --exclude='*/.Trash/*' --exclude='*/.DS_Store' \
  --exclude="/Applications" --exclude='*/Cache*/' \
  --exclude="/Library/Apple/" \
  --exclude='~/Downloads' --exclude='*.app' --exclude='*/.cache/*' --exclude='*.docset*' \
  /* "$backup_dir" 2>&1 | tee "$HOME/Documents/Backup/$(date '+%Y-%m-%d_%H%M%S.log')"

FINISH=$(date "+%s")
date '+%Y-%m-%d %H:%M:%S' >"$backup_dir/_lastbackup.log"
echo "total time: $(((FINISH - START) / 60)) minutes, $(((FINISH - START) % 60)) seconds" >>"$backup_dir/_lastbackup.log"
touch "$backup_dir/_lastbackup.log"
